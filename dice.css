.dice {
    height: 40px;
    width: 40px;
    overflow: hidden;
}

.dice > div {
    width: 40px;
    height: 40px;
    background: #efefefef;
}

.one {
    display: flex;
    align-items: center;
    justify-content: center;
}

.dot {
    background: #444;
    border-radius: 40%;
    display: block;
    height: 5px;
    width: 5px;
}


.two-container,
.three-container {
    height: 100%;
    display: flex;
    align-items: center;
    flex-direction: column;   
    justify-content: space-around;
    transform: rotateZ(-45deg);
}

.five,
.four {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
}


.five-container,
.four-container {
    display: flex;
    align-items: stretch;
    justify-content: space-evenly;
}

.five {
    position: relative;
}

.five > .dot {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.six {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

.six-container {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
}

/* 
        Folding ambition
        In order to create some kind of 3d dice
*/

/* .dice-container {
    transform: rotateY(45deg) rotateX(15deg);
} */
/* 
.one {
    transform: rotateX(15deg) translateY(1px);
}

.two {
    transform: rotateX(75deg) translateY(-57px);
}

.three {
    transform: rotateX(165deg) translateY(72px);
}

.four {
    transform: rotateX(165deg) translateY(72px);
}


*/




/* Animation */

:root {
    --total: 6s;
    --frame-dice: 1s;
}

@keyframes rolling {
    from {
        transform: translateY(0)
    }

    to {
        transform: translateY(-240px)
    }
}


.rolling.dice > div {
    animation: rolling 400ms steps(6, end) alternate infinite;
}